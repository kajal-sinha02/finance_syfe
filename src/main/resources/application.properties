# # spring.application.name=personal-finance-manager
# # spring.datasource.url=jdbc:postgresql://localhost:5432/finance_db
# # spring.datasource.username=postgres
# # spring.datasource.password=root

# # spring.datasource.driver-class-name=org.postgresql.Driver
# # spring.jpa.hibernate.ddl-auto=update
# # spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# # spring.jpa.show-sql=true

# # # Secure session cookie
# # server.servlet.session.timeout=30m
# # server.servlet.session.cookie.secure=true
# # server.servlet.session.cookie.http-only=true
# # server.servlet.session.cookie.same-site=strict


# # App metadata
# spring.application.name=personal-finance-manager

# # PostgreSQL database connection
# spring.datasource.url=jdbc:postgresql://localhost:5432/finance_db
# spring.datasource.username=postgres
# spring.datasource.password=root
# spring.datasource.driver-class-name=org.postgresql.Driver

# # JPA / Hibernate settings
# spring.jpa.hibernate.ddl-auto=update
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# spring.jpa.show-sql=true

# # Session management
# server.servlet.session.timeout=30m
# server.servlet.session.cookie.http-only=true
# server.servlet.session.cookie.same-site=strict

# # ⚠️ Use secure=true only in HTTPS (production)
# server.servlet.session.cookie.secure=false

# server.port=8080
# App metadata
spring.application.name=personal-finance-manager

# PostgreSQL database connection (use env variables for Render)
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${POSTGRES_USER}
spring.datasource.password=${POSTGRES_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA / Hibernate settings
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true

# Session management
server.servlet.session.timeout=30m
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.same-site=strict
server.servlet.session.cookie.secure=${SECURE_COOKIE:true}

# HTTP server
server.port=8080

# Optional: enable reading from .env file (for local dev)
spring.config.import=optional:env[.env]
